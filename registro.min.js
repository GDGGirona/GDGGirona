import { initializeApp } from 'https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js';
import { getFirestore, doc, setDoc, getDoc } from 'https://www.gstatic.com/firebasejs/11.0.1/firebase-firestore.js';

// Configuración de Firebase
const firebaseConfig = {
  apiKey: "AIzaSyDKyHhgGOyjjME-iTfKX37j3DCt4v-m-6I",
  authDomain: "gdggirona2024.firebaseapp.com",
  projectId: "gdggirona2024",
  storageBucket: "gdggirona2024.firebasestorage.app",
  messagingSenderId: "1005196040785",
  appId: "1:1005196040785:web:7720b18f98ef552631b670"
};

 const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Función para decodificar Base64 y obtener el UUID
function obtenerUUIDDesdeParametro() {
  const urlParams = new URLSearchParams(window.location.search);
  const encodedParam = urlParams.get('i');
  if (!encodedParam) {
    return null;
  }

  try {
    // Decodificar el parámetro de base64
    const decodedString = atob(encodedParam);
    const decodedData = JSON.parse(decodedString);
    return decodedData.uuid;
  } catch (error) {
    console.error("Error al decodificar el parámetro i:", error);
    return null;
  }
}

// Obtener el UUID y colocarlo en el campo de solo lectura
const uuid = obtenerUUIDDesdeParametro();
if (uuid) {
  document.getElementById('uuid').value = uuid;
} else {
  document.getElementById('errorMessage').textContent = "Error: UUID no encontrado en el parámetro de la URL.";
  document.getElementById('errorMessage').style.display = "block";
}

// Manejar el envío del formulario de registro
document.getElementById('registroForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const username = document.getElementById('username').value;
  const email = document.getElementById('email').value;
  const errorMessage = document.getElementById('errorMessage');

  // Verificar si el usuario con este UUID ya existe
  const usuarioRef = doc(db, 'usuarios', uuid);
  const usuarioDoc = await getDoc(usuarioRef);

  if (usuarioDoc.exists()) {
    errorMessage.textContent = "Este UUID no valido. Por favor, usa un UUID diferente.";
    errorMessage.style.display = "block";
  } else {
    try {
      // Registrar el nuevo usuario en Firestore
      await setDoc(usuarioRef, {
        uuid: uuid,
        nombreUsuario: username,
        email: email,
        puntosTotales: 0
      });
      alert("Usuario registrado exitosamente");
      // Limpiar el formulario y ocultar el mensaje de error
      document.getElementById('registroForm').reset();
      errorMessage.style.display = "none";
    } catch (error) {
      console.error("Error registrando usuario:", error);
      errorMessage.textContent = "Ocurrió un error al registrar el usuario.";
      errorMessage.style.display = "block";
    }
  }
});
